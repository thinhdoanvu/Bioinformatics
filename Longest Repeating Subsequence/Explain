Given a string, find length of the longest repeating subseequence 
such that the two subsequence don’t have same string character at same position, 
i.e., any i’th character in the two subsequences shouldn’t have the same index in the original string.

INPUT STRING : AABEBCDD
OUTPUT STRING: ABD

Using Longest Common String (LCS) algorithm for itshelf, and modify like this:
If(X[i]==Y[j] and i!=j then C[i,j]=C[i-1,j-1]+1)//left conner above
If(X[i]==Y[j] and i==j then C[i,j]=C[i-1,j-1]) <-> Lefthand side
If(X[i]!=Y[j] and C[i-1,j]>=C[i,j-1] then C[i,j]=C[i-1,j-1]) <-> Up
If(X[i]<>Y[j] and C[i-1,j]<C[i,j-1] then C[i,j]=C[i,j-1]) <-> Left
==============================================================================================================================
DEMO
==============================================================================================================================
Nhap du lieu cho chuoi X:
AABEBCDD

Chuoi AABEBCDD co do dai = 8
Ma tran trong so:
000000000
001111111
011111111
011112222
011112222
011222222
011222222
011222223
011222233

Ma tran luu vet:
000000000
010111111
001111111
021110111
021112111
021011111
021211111
021211110
021211101

Chuoi lap lai dai nhat la: 3
Chuoi tim duoc la: ABD
